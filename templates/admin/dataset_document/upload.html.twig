<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>{{ dataset.name }} - 上传文档</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    
    <style>
        body { background-color: #f8f9fa; }
        .navbar-brand { font-weight: bold; }
        .main-content { padding: 2rem 0; }
        .upload-area { 
            border: 2px dashed #dee2e6; 
            border-radius: 0.5rem; 
            padding: 3rem;
            text-align: center;
            transition: all 0.3s ease;
        }
        .upload-area.drag-over { 
            border-color: #007bff; 
            background-color: #e7f3ff; 
        }
        .file-info { font-size: 0.875rem; color: #6c757d; }
    </style>
</head>
<body>
    <!-- 导航栏 -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container-fluid">
            <a class="navbar-brand" href="{{ path('admin_rag_flow_dataset_index') }}">
                <i class="fas fa-database me-2"></i>RAG Flow 管理
            </a>
        </div>
    </nav>

    <div class="container-fluid main-content">
        <!-- 页面标题 -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="h3">
                <i class="fa fa-upload fa-fw me-2"></i>
                {{ dataset.name }} - 上传文档
            </h1>
        </div>
    {# 面包屑导航 #}
    <div class="mb-3">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="{{ path('admin_rag_flow_dataset_index') }}">数据集管理</a>
                </li>
                <li class="breadcrumb-item">
                    <a href="{{ path('admin_rag_flow_dataset_detail', {'entityId': dataset.id}) }}">{{ dataset.name }}</a>
                </li>
                <li class="breadcrumb-item">
                    <a href="{{ return_url ?? path('dataset_documents_index', {'datasetId': dataset.id}) }}">文档管理</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">上传文档</li>
            </ol>
        </nav>
    </div>

    {# 数据集信息 #}
    <div class="alert alert-info">
        <div class="row align-items-center">
            <div class="col-auto">
                <i class="fa fa-info-circle fa-2x"></i>
            </div>
            <div class="col">
                <h5 class="mb-1">上传到数据集: {{ dataset.name }}</h5>
                <p class="mb-0">
                    <small class="text-muted">
                        数据集ID: {{ dataset.id }} | 
                        描述: {{ dataset.description ?: '无描述' }}
                    </small>
                </p>
            </div>
        </div>
    </div>

    {# 支持的文件类型说明 #}
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="mb-0">
                <i class="fa fa-file-alt fa-fw"></i>
                支持的文件类型
            </h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-3">
                    <h6 class="text-primary">
                        <i class="far fa-file-pdf"></i> 文档类型
                    </h6>
                    <ul class="list-unstyled small">
                        <li><span class="badge bg-light text-dark me-1">PDF</span> PDF文档</li>
                        <li><span class="badge bg-light text-dark me-1">DOC</span> Word文档</li>
                        <li><span class="badge bg-light text-dark me-1">DOCX</span> Word文档</li>
                        <li><span class="badge bg-light text-dark me-1">TXT</span> 纯文本</li>
                        <li><span class="badge bg-light text-dark me-1">MD</span> Markdown</li>
                    </ul>
                </div>
                <div class="col-md-3">
                    <h6 class="text-success">
                        <i class="far fa-file-excel"></i> 表格类型
                    </h6>
                    <ul class="list-unstyled small">
                        <li><span class="badge bg-light text-dark me-1">CSV</span> 逗号分隔值</li>
                        <li><span class="badge bg-light text-dark me-1">XLSX</span> Excel文档</li>
                        <li><span class="badge bg-light text-dark me-1">XLS</span> Excel文档</li>
                    </ul>
                </div>
                <div class="col-md-3">
                    <h6 class="text-info">
                        <i class="far fa-file-image"></i> 图片类型
                    </h6>
                    <ul class="list-unstyled small">
                        <li><span class="badge bg-light text-dark me-1">JPEG</span> JPEG图片</li>
                        <li><span class="badge bg-light text-dark me-1">JPG</span> JPG图片</li>
                        <li><span class="badge bg-light text-dark me-1">PNG</span> PNG图片</li>
                        <li><span class="badge bg-light text-dark me-1">GIF</span> GIF图片</li>
                        <li><span class="badge bg-light text-dark me-1">TIF</span> TIF图片</li>
                    </ul>
                </div>
                <div class="col-md-3">
                    <h6 class="text-warning">
                        <i class="far fa-file-powerpoint"></i> 演示文稿
                    </h6>
                    <ul class="list-unstyled small">
                        <li><span class="badge bg-light text-dark me-1">PPT</span> PowerPoint</li>
                        <li><span class="badge bg-light text-dark me-1">PPTX</span> PowerPoint</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    {# 文件上传表单 #}
    <div class="card">
        <div class="card-header">
            <h5 class="mb-0">
                <i class="fa fa-cloud-upload-alt fa-fw"></i>
                选择文件上传
            </h5>
        </div>
        <div class="card-body">
            <form method="post" enctype="multipart/form-data" id="uploadForm" action="{{ path('dataset_documents_upload', {'datasetId': dataset.id}) }}">
                <input type="hidden" name="_token" value="{{ csrf_token('upload_documents') }}" />
                {# 拖拽上传区域 #}
                <div class="upload-area" id="uploadArea">
                    <div class="text-center py-5">
                        <i class="fa fa-cloud-upload-alt fa-4x text-muted mb-3"></i>
                        <h4 class="text-muted">拖拽文件到此处上传</h4>
                        <p class="text-muted">或者点击下方按钮选择文件</p>
                        <div class="mt-3">
                            <input type="file" name="files[]" id="fileInput" multiple 
                                   accept=".pdf,.doc,.docx,.txt,.md,.csv,.xlsx,.xls,.jpg,.jpeg,.png,.gif,.tif,.ppt,.pptx"
                                   class="d-none">
                            <button type="button" class="btn btn-primary" onclick="document.getElementById('fileInput').click()">
                                <i class="fa fa-file-plus fa-fw"></i> 选择文件
                            </button>
                        </div>
                    </div>
                </div>

                {# 已选择的文件列表 #}
                <div id="fileList" class="mt-3" style="display: none;">
                    <h6>已选择的文件:</h6>
                    <div id="selectedFiles" class="list-group"></div>
                </div>

                {# 上传进度 #}
                <div id="uploadProgress" class="mt-3" style="display: none;">
                    <h6>上传进度:</h6>
                    <div class="progress">
                        <div id="progressBar" class="progress-bar progress-bar-striped progress-bar-animated" 
                             role="progressbar" style="width: 0%">
                            <span id="progressText">0%</span>
                        </div>
                    </div>
                </div>

                {# 操作按钮 #}
                <div class="mt-4 d-flex justify-content-between">
                    <div>
                        <a href="{{ return_url ?? path('dataset_documents_index', {'datasetId': dataset.id}) }}" 
                           class="btn btn-secondary">
                            <i class="fa fa-arrow-left fa-fw"></i> 返回文档列表
                        </a>
                    </div>
                    <div>
                        <button type="button" class="btn btn-outline-secondary me-2" onclick="clearFiles()">
                            <i class="fa fa-times fa-fw"></i> 清空选择
                        </button>
                        <button type="submit" class="btn btn-primary" id="uploadBtn" disabled>
                            <i class="fa fa-upload fa-fw"></i> 开始上传
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    {# 上传说明 #}
    <div class="card mt-4">
        <div class="card-header">
            <h6 class="mb-0">
                <i class="fa fa-exclamation-triangle fa-fw"></i>
                上传说明
            </h6>
        </div>
        <div class="card-body">
            <ul class="mb-0 small">
                <li>单个文件大小限制：最大 50MB</li>
                <li>同时上传文件数量：最多 20 个文件</li>
                <li>上传后的文件将自动同步到 RAGFlow 进行处理</li>
                <li>文档处理完成后可以在文档列表中查看解析结果</li>
                <li>支持的文档语言：中文、英文及其他主流语言</li>
                <li>建议上传高质量的文档以获得更好的解析效果</li>
            </ul>
        </div>
    </div>

    <style>
        .upload-area {
            border: 2px dashed #dee2e6;
            border-radius: 8px;
            background-color: #f8f9fa;
            transition: all 0.3s ease;
        }
        
        .upload-area:hover,
        .upload-area.dragover {
            border-color: #007bff;
            background-color: #e7f3ff;
        }
        
        .file-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 10px;
            background: #f8f9fa;
            border-radius: 4px;
            margin-bottom: 8px;
        }
        
        .file-info {
            display: flex;
            align-items: center;
            flex: 1;
        }
        
        .file-icon {
            margin-right: 10px;
            width: 20px;
            text-align: center;
        }
        
        .file-details {
            flex: 1;
        }
        
        .file-name {
            font-weight: 500;
            margin: 0;
            font-size: 14px;
        }
        
        .file-size {
            color: #6c757d;
            font-size: 12px;
            margin: 0;
        }
        
        .file-remove {
            color: #dc3545;
            cursor: pointer;
            padding: 4px;
        }
        
        .file-remove:hover {
            color: #c82333;
        }
    </style>

    <script>
        let selectedFiles = [];
        const maxFileSize = 50 * 1024 * 1024; // 50MB
        const maxFiles = 20;

        // 文件选择处理
        document.getElementById('fileInput').addEventListener('change', function(e) {
            handleFiles(e.target.files);
        });

        // 拖拽上传功能
        const uploadArea = document.getElementById('uploadArea');
        
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            uploadArea.addEventListener(eventName, preventDefaults, false);
        });
        
        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }
        
        ['dragenter', 'dragover'].forEach(eventName => {
            uploadArea.addEventListener(eventName, highlight, false);
        });
        
        ['dragleave', 'drop'].forEach(eventName => {
            uploadArea.addEventListener(eventName, unhighlight, false);
        });
        
        function highlight() {
            uploadArea.classList.add('dragover');
        }
        
        function unhighlight() {
            uploadArea.classList.remove('dragover');
        }
        
        uploadArea.addEventListener('drop', function(e) {
            const files = e.dataTransfer.files;
            handleFiles(files);
        });

        // 处理选择的文件
        function handleFiles(files) {
            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                
                // 检查文件数量限制
                if (selectedFiles.length >= maxFiles) {
                    alert(`最多只能选择 ${maxFiles} 个文件`);
                    break;
                }
                
                // 检查文件大小
                if (file.size > maxFileSize) {
                    alert(`文件 "${file.name}" 大小超过 50MB 限制`);
                    continue;
                }
                
                // 检查文件类型
                const allowedExtensions = {{ supported_types | json_encode | raw }};
                const fileExtension = file.name.split('.').pop().toLowerCase();
                if (!allowedExtensions.includes(fileExtension)) {
                    alert(`文件 "${file.name}" 的类型不支持`);
                    continue;
                }
                
                // 检查重复文件
                if (selectedFiles.some(f => f.name === file.name && f.size === file.size)) {
                    alert(`文件 "${file.name}" 已经选择`);
                    continue;
                }
                
                selectedFiles.push(file);
            }
            
            // 更新file input以保持同步
            updateFileInput();
            updateFileList();
            updateUploadButton();
        }
        
        // 更新file input以保持与selectedFiles同步
        function updateFileInput() {
            const fileInput = document.getElementById('fileInput');
            const dt = new DataTransfer();
            
            selectedFiles.forEach(file => {
                dt.items.add(file);
            });
            
            fileInput.files = dt.files;
        }

        // 更新文件列表显示
        function updateFileList() {
            const fileList = document.getElementById('fileList');
            const selectedFilesContainer = document.getElementById('selectedFiles');
            
            if (selectedFiles.length === 0) {
                fileList.style.display = 'none';
                return;
            }
            
            fileList.style.display = 'block';
            selectedFilesContainer.innerHTML = '';
            
            selectedFiles.forEach((file, index) => {
                const fileItem = document.createElement('div');
                fileItem.className = 'file-item';
                
                let icon = 'fa-file';
                const extension = file.name.split('.').pop().toLowerCase();
                if (['pdf'].includes(extension)) {
                    icon = 'fa-file-pdf text-danger';
                } else if (['doc', 'docx'].includes(extension)) {
                    icon = 'fa-file-word text-primary';
                } else if (['xls', 'xlsx'].includes(extension)) {
                    icon = 'fa-file-excel text-success';
                } else if (['ppt', 'pptx'].includes(extension)) {
                    icon = 'fa-file-powerpoint text-warning';
                } else if (['txt', 'md'].includes(extension)) {
                    icon = 'fa-file-alt';
                } else if (['jpg', 'jpeg', 'png', 'gif', 'tif'].includes(extension)) {
                    icon = 'fa-file-image text-info';
                }
                
                fileItem.innerHTML = `
                    <div class="file-info">
                        <div class="file-icon">
                            <i class="far ${icon}"></i>
                        </div>
                        <div class="file-details">
                            <p class="file-name">${file.name}</p>
                            <p class="file-size">${formatFileSize(file.size)}</p>
                        </div>
                    </div>
                    <div class="file-remove" onclick="removeFile(${index})">
                        <i class="fa fa-times"></i>
                    </div>
                `;
                
                selectedFilesContainer.appendChild(fileItem);
            });
        }

        // 格式化文件大小
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 B';
            const k = 1024;
            const sizes = ['B', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        // 移除文件
        function removeFile(index) {
            selectedFiles.splice(index, 1);
            updateFileInput();
            updateFileList();
            updateUploadButton();
        }

        // 清空所有文件
        function clearFiles() {
            selectedFiles = [];
            document.getElementById('fileInput').value = '';
            updateFileList();
            updateUploadButton();
        }

        // 更新上传按钮状态
        function updateUploadButton() {
            const uploadBtn = document.getElementById('uploadBtn');
            uploadBtn.disabled = selectedFiles.length === 0;
        }

        // 表单提交处理
        document.getElementById('uploadForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            if (selectedFiles.length === 0) {
                alert('请先选择要上传的文件');
                return;
            }
            
            if (!confirm(`确认上传 ${selectedFiles.length} 个文件到数据集 "{{ dataset.name }}" 吗？`)) {
                return;
            }
            
            uploadFiles();
        });

        // 执行文件上传
        function uploadFiles() {
            const formData = new FormData();
            
            // 添加文件到FormData
            selectedFiles.forEach(file => {
                formData.append('files[]', file);
            });
            
            // 添加CSRF token
            const csrfToken = document.querySelector('input[name="_token"]').value;
            formData.append('_token', csrfToken);
            
            console.log('Uploading files:', selectedFiles.length);
            selectedFiles.forEach((file, index) => {
                console.log(`File ${index + 1}: ${file.name} (${file.size} bytes)`);
            });
            
            const uploadProgress = document.getElementById('uploadProgress');
            const progressBar = document.getElementById('progressBar');
            const progressText = document.getElementById('progressText');
            const uploadBtn = document.getElementById('uploadBtn');
            
            uploadProgress.style.display = 'block';
            uploadBtn.disabled = true;
            uploadBtn.innerHTML = '<i class="fa fa-spinner fa-spin fa-fw"></i> 上传中...';
            
            const xhr = new XMLHttpRequest();
            
            // 上传进度
            xhr.upload.addEventListener('progress', function(e) {
                if (e.lengthComputable) {
                    const percentComplete = Math.round((e.loaded / e.total) * 100);
                    progressBar.style.width = percentComplete + '%';
                    progressText.textContent = percentComplete + '%';
                }
            });
            
            // 上传完成
            xhr.addEventListener('load', function() {
                console.log('Upload response:', xhr.status, xhr.responseText);
                
                if (xhr.status === 200 || xhr.status === 302) {
                    alert('文件上传成功！');
                    window.location.href = `{{ path('dataset_documents_index', {'datasetId': dataset.id}) }}`;
                } else {
                    console.error('Upload failed:', xhr.status, xhr.responseText);
                    let errorMessage = '上传失败，请稍后重试';
                    
                    try {
                        const response = JSON.parse(xhr.responseText);
                        if (response.error) {
                            errorMessage = response.error;
                        }
                    } catch (e) {
                        // 如果不是JSON响应，使用默认错误信息
                    }
                    
                    alert(errorMessage);
                    uploadBtn.disabled = false;
                    uploadBtn.innerHTML = '<i class="fa fa-upload fa-fw"></i> 开始上传';
                    uploadProgress.style.display = 'none';
                }
            });
            
            // 上传错误
            xhr.addEventListener('error', function() {
                console.error('Upload error:', xhr);
                alert('上传过程中发生网络错误，请检查网络连接后重试');
                uploadBtn.disabled = false;
                uploadBtn.innerHTML = '<i class="fa fa-upload fa-fw"></i> 开始上传';
                uploadProgress.style.display = 'none';
            });
            
            xhr.open('POST', '{{ path("dataset_documents_upload", {"datasetId": dataset.id}) }}');
            xhr.send(formData);
        }
    </script>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    </div>
</body>
</html>